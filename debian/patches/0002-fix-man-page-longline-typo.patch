Description: Fix a long line error and typos in man pages.
--- a/man/man3/TPMLIB_GetInfo.3
+++ b/man/man3/TPMLIB_GetInfo.3
@@ -150,7 +150,7 @@
 \&\fBchar *TPMLIB_GetInfo(TPMLIB_InfoFlags flags);\fR
 .SH "DESCRIPTION"
 .IX Header "DESCRIPTION"
-The \fB\f(BITPMLIB_GetInfo()\fB\fR function allows to query for \s-1TPM\s0 implementation
+The \fB\f(BITPMLIB_GetInfo()\fB\fR function allows a user to query for \s-1TPM\s0 implementation
 specifics and get a \s-1JSON\s0 string in return. Which data is to be returned
 can be specified in the flags parameter that may be a logical 'or' concatenation
 of flags. If passed flags are not supported, nothing is returned . If a 0 is
@@ -162,7 +162,8 @@
 {\*(L"TPMSpecification\*(R":{\*(L"family\*(R":\*(L"1.2\*(R",\*(L"level\*(R":2,\*(L"revision\*(R":116}}
 .IP "\fB\s-1TPMLIB_INFO_TPMATTRIBUTES\s0\fR" 4
 .IX Item "TPMLIB_INFO_TPMATTRIBUTES"
-{\*(L"TPMAttributes\*(R":{\*(L"manufacturer\*(R":\*(L"id:00001014\*(R",\*(L"version\*(R":\*(L"id:00740001\*(R",\*(L"model\*(R":\*(L"swtpm\*(R"}}
+{\*(L"TPMAttributes\*(R":{\*(L"manufacturer\*(R":\*(L"id:00001014\*(R",
+\&\*(L"version\*(R":\*(L"id:00740001\*(R",\*(L"model\*(R":\*(L"swtpm\*(R"}}
 .SH "RETURN VALUE"
 .IX Header "RETURN VALUE"
 This function returns a \s-1JSON\s0 string on success and a \s-1NULL\s0 pointer if a memory
--- a/man/man3/TPMLIB_GetInfo.pod
+++ b/man/man3/TPMLIB_GetInfo.pod
@@ -14,7 +14,7 @@
 
 =head1 DESCRIPTION
 
-The B<TPMLIB_GetInfo()> function allows to query for TPM implementation
+The B<TPMLIB_GetInfo()> function allows a user to query for TPM implementation
 specifics and get a JSON string in return. Which data is to be returned
 can be specified in the flags parameter that may be a logical 'or' concatenation
 of flags. If passed flags are not supported, nothing is returned . If a 0 is
@@ -30,7 +30,8 @@
 
 =item B<TPMLIB_INFO_TPMATTRIBUTES>
 
-{"TPMAttributes":{"manufacturer":"id:00001014","version":"id:00740001","model":"swtpm"}}
+{"TPMAttributes":{"manufacturer":"id:00001014",
+"version":"id:00740001","model":"swtpm"}}
 
 =back
 
--- a/man/man3/TPMLIB_DecodeBlob.3
+++ b/man/man3/TPMLIB_DecodeBlob.3
@@ -163,7 +163,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_SIZE\s0\fR" 4
 .IX Item "TPM_SIZE"
 The size of a requested buffer exceeds the limit or the
--- a/man/man3/TPMLIB_DecodeBlob.pod
+++ b/man/man3/TPMLIB_DecodeBlob.pod
@@ -43,7 +43,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_SIZE>
 
--- a/man/man3/TPMLIB_GetTPMProperty.3
+++ b/man/man3/TPMLIB_GetTPMProperty.3
@@ -194,7 +194,7 @@
 The number of delegate entries.
 .IP "\fB\s-1TPMPROP_TPM_SPACE_SAFETY_MARGIN\s0\fR" 4
 .IX Item "TPMPROP_TPM_SPACE_SAFETY_MARGIN"
-The space saftey margin used for the worst-case sizes of the savestate and
+The space safetey margin used for the worst-case sizes of the savestate and
 volatile state blobs. This safety marging is not used for the size of the
 permanent data blob.
 .IP "\fB\s-1TPMPROP_TPM_MAX_NV_SPACE\s0\fR" 4
@@ -211,7 +211,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 An undefined property was queried.
--- a/man/man3/TPMLIB_GetTPMProperty.pod
+++ b/man/man3/TPMLIB_GetTPMProperty.pod
@@ -77,7 +77,7 @@
 
 =item B<TPMPROP_TPM_SPACE_SAFETY_MARGIN>
 
-The space saftey margin used for the worst-case sizes of the savestate and
+The space safetey margin used for the worst-case sizes of the savestate and
 volatile state blobs. This safety marging is not used for the size of the
 permanent data blob.
 
@@ -102,7 +102,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPMLIB_MainInit.3
+++ b/man/man3/TPMLIB_MainInit.3
@@ -173,7 +173,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPMLIB_MainInit.pod
+++ b/man/man3/TPMLIB_MainInit.pod
@@ -40,7 +40,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPMLIB_Process.3
+++ b/man/man3/TPMLIB_Process.3
@@ -157,7 +157,7 @@
 result. If no buffer is given (\fIrespbuffer\fR is \s-1NULL\s0), the \s-1TPM\s0 will
 allocate a buffer. The parameter \fIresp_size\fR returns the number of valid
 \&\s-1TPM\s0 response bytes in the buffer. The number of valid bytes in the response
-is guranteed to not exceed the maximum I/O buffer size. Use the
+is guaranteed to not exceed the maximum I/O buffer size. Use the
 \&\fI\fITPMLIB_GetTPMProperty()\fI\fR \s-1API\s0 and parameter \fI\s-1TPMPROP_TPM_BUFFER_MAX\s0\fR for
 getting the maximum size.
 The user must indicate the size of a provided buffer with the \fIrespbufsize\fR
@@ -169,7 +169,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPMLIB_Process.pod
+++ b/man/man3/TPMLIB_Process.pod
@@ -30,7 +30,7 @@
 result. If no buffer is given (I<respbuffer> is NULL), the TPM will
 allocate a buffer. The parameter I<resp_size> returns the number of valid
 TPM response bytes in the buffer. The number of valid bytes in the response
-is guranteed to not exceed the maximum I/O buffer size. Use the
+is guaranteed to not exceed the maximum I/O buffer size. Use the
 I<TPMLIB_GetTPMProperty()> API and parameter I<TPMPROP_TPM_BUFFER_MAX> for
 getting the maximum size.
 The user must indicate the size of a provided buffer with the I<respbufsize>
@@ -45,7 +45,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPMLIB_RegisterCallbacks.3
+++ b/man/man3/TPMLIB_RegisterCallbacks.3
@@ -155,7 +155,7 @@
 \&\fB\s-1TPM_RESULT\s0 TPMLIB_RegisterCallbacks(struct tpmlibrary_callbacks *);\fR
 .SH "DESCRIPTION"
 .IX Header "DESCRIPTION"
-The \fB\fBTPMLIB_RegisterCallbacks()\fB\fR functions allows to register several
+The \fB\fBTPMLIB_RegisterCallbacks()\fB\fR functions allows a user to register several
 callback functions with libtpms that enable a user to implement customized
 behavior of several library-internal functions. This feature will typically
 be used if the behavior of the provided internal functions is not as needed.
@@ -314,7 +314,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPMLIB_RegisterCallbacks.pod
+++ b/man/man3/TPMLIB_RegisterCallbacks.pod
@@ -21,7 +21,7 @@
 
 =head1 DESCRIPTION
 
-The B<TPMLIB_RegisterCallbacks()> functions allows to register several
+The B<TPMLIB_RegisterCallbacks()> functions allows a user to register several
 callback functions with libtpms that enable a user to implement customized
 behavior of several library-internal functions. This feature will typically
 be used if the behavior of the provided internal functions is not as needed.
@@ -193,7 +193,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPMLIB_VolatileAll_Store.3
+++ b/man/man3/TPMLIB_VolatileAll_Store.3
@@ -152,7 +152,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPMLIB_VolatileAll_Store.pod
+++ b/man/man3/TPMLIB_VolatileAll_Store.pod
@@ -27,7 +27,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPM_IO_Hash_Start.3
+++ b/man/man3/TPM_IO_Hash_Start.3
@@ -173,7 +173,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPM_IO_Hash_Start.pod
+++ b/man/man3/TPM_IO_Hash_Start.pod
@@ -49,7 +49,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPM_IO_TpmEstablished_Get.3
+++ b/man/man3/TPM_IO_TpmEstablished_Get.3
@@ -156,7 +156,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_FAIL\s0\fR" 4
 .IX Item "TPM_FAIL"
 General failure.
--- a/man/man3/TPM_IO_TpmEstablished_Get.pod
+++ b/man/man3/TPM_IO_TpmEstablished_Get.pod
@@ -34,7 +34,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_FAIL>
 
--- a/man/man3/TPM_Malloc.3
+++ b/man/man3/TPM_Malloc.3
@@ -160,7 +160,7 @@
 contain the data from the original buffer.
 .PP
 Both functions have the restriction that the buffer they can allocate
-is limited to \fB\s-1TPM_ALLOC_MAX\s0\fR (64k) bytes. This size is sufficent
+is limited to \fB\s-1TPM_ALLOC_MAX\s0\fR (64k) bytes. This size is sufficient
 for all buffers needed by the \s-1TPM\s0.
 .PP
 Upon successful completion, the functions return \fB\s-1TPM_SUCCESS\s0\fR. In case the
@@ -173,7 +173,7 @@
 .IX Header "ERRORS"
 .IP "\fB\s-1TPM_SUCCESS\s0\fR" 4
 .IX Item "TPM_SUCCESS"
-The function completed sucessfully.
+The function completed successfully.
 .IP "\fB\s-1TPM_SIZE\s0\fR" 4
 .IX Item "TPM_SIZE"
 The size of the requested buffer exceeds the limit or the
--- a/man/man3/TPM_Malloc.pod
+++ b/man/man3/TPM_Malloc.pod
@@ -32,7 +32,7 @@
 contain the data from the original buffer.
 
 Both functions have the restriction that the buffer they can allocate
-is limited to B<TPM_ALLOC_MAX> (64k) bytes. This size is sufficent
+is limited to B<TPM_ALLOC_MAX> (64k) bytes. This size is sufficient
 for all buffers needed by the TPM.
 
 Upon successful completion, the functions return B<TPM_SUCCESS>. In case the
@@ -48,7 +48,7 @@
 
 =item B<TPM_SUCCESS>
 
-The function completed sucessfully.
+The function completed successfully.
 
 =item B<TPM_SIZE>
 
--- a/man/man3/TPMLIB_SetBufferSize.3
+++ b/man/man3/TPMLIB_SetBufferSize.3
@@ -152,7 +152,7 @@
 .IX Header "DESCRIPTION"
 The \fB\f(BITPMLIB_SetBufferSize()\fB\fR function sets the size of the buffer
 the \s-1TPM\s0 can use for input and output and that it advertises to users.
-It also allows to get the minimum and maximum supported buffer
+It also allows a user to get the minimum and maximum supported buffer
 size.
 .PP
 If 0 is given on input, the currently used buffer size is returned.
--- a/man/man3/TPMLIB_SetDebugFD.3
+++ b/man/man3/TPMLIB_SetDebugFD.3
@@ -158,15 +158,15 @@
 \&\fBuint32_t TPMLIB_SetDebugPrefix(const char *prefix);\fR
 .SH "DESCRIPTION"
 .IX Header "DESCRIPTION"
-\&\fB\f(BITPMLIB_SetDebugFD()\fB\fR allows to set the file descriptor
+\&\fB\f(BITPMLIB_SetDebugFD()\fB\fR allows a user to set the file descriptor
 to send the debug output to.
 .PP
-\&\fB\f(BITPMLIB_SetDebugLevel()\fB\fR allows to set the debug level.
+\&\fB\f(BITPMLIB_SetDebugLevel()\fB\fR allows a user to set the debug level.
 Only debug levels greater than 1 will produce output. The indentation
 level of a line will determine whether it is printed. Lines with
 0 indentation will be printed at debug level 1, 1 space of indentation
 at debug level 2 and so on.
 .PP
-\&\fB\f(BITPMLIB_SetDebugPrefix()\fB\fR allows to set a prefix that is
+\&\fB\f(BITPMLIB_SetDebugPrefix()\fB\fR allows a user to set a prefix that is
 to be printed in front of every line of debugging output. The
 prefix can be used for further indentation.
--- a/man/man3/TPMLIB_SetDebugFD.pod
+++ b/man/man3/TPMLIB_SetDebugFD.pod
@@ -22,16 +22,16 @@
 
 =head1 DESCRIPTION
 
-B<TPMLIB_SetDebugFD()> allows to set the file descriptor
+B<TPMLIB_SetDebugFD()> allows a user to set the file descriptor
 to send the debug output to.
 
-B<TPMLIB_SetDebugLevel()> allows to set the debug level.
+B<TPMLIB_SetDebugLevel()> allows a user to set the debug level.
 Only debug levels greater than 1 will produce output. The indentation
 level of a line will determine whether it is printed. Lines with
 0 indentation will be printed at debug level 1, 1 space of indentation
 at debug level 2 and so on.
 
-B<TPMLIB_SetDebugPrefix()> allows to set a prefix that is
+B<TPMLIB_SetDebugPrefix()> allows a user to set a prefix that is
 to be printed in front of every line of debugging output. The
 prefix can be used for further indentation.
 
--- a/man/man3/TPMLIB_SetState.3
+++ b/man/man3/TPMLIB_SetState.3
@@ -152,7 +152,7 @@
                            unsigned char **buffer, uint32_t *buflen);\fR
 .SH "DESCRIPTION"
 .IX Header "DESCRIPTION"
-The \fB\f(BITPMLIB_SetState()\fB\fR function allows to set either one of the state blobs of
+The \fB\f(BITPMLIB_SetState()\fB\fR function allows a user to set either one of the state blobs of
 the \s-1TPM.\s0 The passed state blob is tested for whether it can be accepted and a \s-1TPM\s0
 error code is returned in case it cannot be accepted. In case of acceptance, the
 state blob will be passed to the \s-1TPM\s0 upon \fB\f(BITPM_MainInit()\fB\fR. Setting a state blob
@@ -169,7 +169,7 @@
 to be the one representing the \s-1TPM\s0's permanent state. Only after that either
 the volatile or save state blobs can be set.
 .PP
-The \fB\f(BITPMLIB_GetState()\fB\fR function allows to get the current state of the \s-1TPM.\s0
+The \fB\f(BITPMLIB_GetState()\fB\fR function allows a user to get the current state of the \s-1TPM.\s0
 For as long as the \s-1TPM\s0 has not been started, this function either returns the state
 blob previously set with \fB\f(BITPMLIB_SetState()\fB\fR or the state is read from a file.
 Once the \s-1TPM\s0 has been start the state of the running \s-1TPM\s0 is returned.
--- a/man/man3/TPMLIB_SetState.pod
+++ b/man/man3/TPMLIB_SetState.pod
@@ -20,7 +20,7 @@
 
 =head1 DESCRIPTION
 
-The B<TPMLIB_SetState()> function allows to set either one of the state blobs of
+The B<TPMLIB_SetState()> function allows a user to set either one of the state blobs of
 the TPM. The passed state blob is tested for whether it can be accepted and a TPM
 error code is returned in case it cannot be accepted. In case of acceptance, the
 state blob will be passed to the TPM upon B<TPM_MainInit()>. Setting a state blob
@@ -37,7 +37,7 @@
 to be the one representing the TPM's permanent state. Only after that either
 the volatile or save state blobs can be set.
 
-The B<TPMLIB_GetState()> function allows to get the current state of the TPM.
+The B<TPMLIB_GetState()> function allows a user to get the current state of the TPM.
 For as long as the TPM has not been started, this function either returns the state
 blob previously set with B<TPMLIB_SetState()> or the state is read from a file.
 Once the TPM has been start the state of the running TPM is returned.
--- a/man/man3/TPMLIB_ValidateState.3
+++ b/man/man3/TPMLIB_ValidateState.3
@@ -152,7 +152,7 @@
 \&\fR
 .SH "DESCRIPTION"
 .IX Header "DESCRIPTION"
-The \fB\f(BITPMLIB_ValidateState()\fB\fR function allows to validate the
+The \fB\f(BITPMLIB_ValidateState()\fB\fR function allows a user to validate the
 state blobs that the \s-1TPM\s0 would read upon \fB\f(BITPMLIB_MainInit()\fB\fR or
 once the TPM_Startup command has been sent to it.
 .PP
--- a/man/man3/TPMLIB_ValidateState.pod
+++ b/man/man3/TPMLIB_ValidateState.pod
@@ -16,7 +16,7 @@
 
 =head1 DESCRIPTION
 
-The B<TPMLIB_ValidateState()> function allows to validate the
+The B<TPMLIB_ValidateState()> function allows a user to validate the
 state blobs that the TPM would read upon B<TPMLIB_MainInit()> or
 once the TPM_Startup command has been sent to it.
 
--- a/man/man3/TPMLIB_SetBufferSize.pod
+++ b/man/man3/TPMLIB_SetBufferSize.pod
@@ -16,7 +16,7 @@
 
 The B<TPMLIB_SetBufferSize()> function sets the size of the buffer
 the TPM can use for input and output and that it advertises to users.
-It also allows to get the minimum and maximum supported buffer
+It also allows a user to get the minimum and maximum supported buffer
 size.
 
 If 0 is given on input, the currently used buffer size is returned.
